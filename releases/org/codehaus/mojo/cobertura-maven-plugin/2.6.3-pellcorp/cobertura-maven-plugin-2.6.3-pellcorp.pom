<?xml version="1.0" encoding="ISO-8859-1"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.codehaus.mojo</groupId>
	<artifactId>cobertura-maven-plugin</artifactId>
	<version>2.6.3-pellcorp</version>
	<packaging>maven-plugin</packaging>

	<name>Mojo's Maven plugin for Cobertura</name>
	<url>https://github.com/pellcorp/cobertura-maven-plugin</url>
	<description>This is a simplified version of the codehaus plugin.  It's designed to provide goals
  to integrate into a standard lifecycle, where the instrumented java classes will be used for testing
  as well as coverage.</description>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<distributionManagement>
		<repository>
			<id>repo</id>
			<url>${maven.repo.dir}/releases</url>
		</repository>

		<snapshotRepository>
			<id>snapshot-repo</id>
			<url>${maven.repo.dir}/snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<prerequisites>
		<maven>${mavenVersion}</maven>
	</prerequisites>

	<properties>
		<mojo.java.target>1.5</mojo.java.target>
		<mavenVersion>2.0.8</mavenVersion> <!-- MNG-3062 -->
		<coberturaVersion>2.0.2</coberturaVersion>
	</properties>

	<dependencies>
		<!-- cobertura plugin deps -->
		<dependency>
			<groupId>net.sourceforge.cobertura</groupId>
			<artifactId>cobertura</artifactId>
			<version>${coberturaVersion}</version>
		</dependency>

		<!-- runtime has no 3rd party deps. This allows us to pass this dependency 
			into the project's classpath at runtime without risk of introducing dep version 
			clashes e.g. projects which require an older version of asm (namely Hibernate). -->
		<dependency>
			<groupId>net.sourceforge.cobertura</groupId>
			<artifactId>cobertura-runtime</artifactId>
			<version>${coberturaVersion}</version>
			<type>pom</type>
		</dependency>

		<dependency>
			<groupId>urbanophile</groupId>
			<artifactId>java-getopt</artifactId>
			<version>1.0.9</version>
		</dependency>

		<!-- maven plugin deps -->
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-core</artifactId>
			<version>${mavenVersion}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-artifact</artifactId>
			<version>${mavenVersion}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-plugin-api</artifactId>
			<version>${mavenVersion}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.maven.reporting</groupId>
			<artifactId>maven-reporting-api</artifactId>
			<version>${mavenVersion}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-project</artifactId>
			<version>${mavenVersion}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.maven.reporting</groupId>
			<artifactId>maven-reporting-impl</artifactId>
			<version>2.0.4.2</version>
		</dependency>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.4</version>
		</dependency>

		<dependency>
			<groupId>org.codehaus.plexus</groupId>
			<artifactId>plexus-utils</artifactId>
			<version>2.0.2</version>
		</dependency>

		<dependency>
			<groupId>org.apache.maven.shared</groupId>
			<artifactId>maven-invoker</artifactId>
			<version>2.0.11</version>
		</dependency>
	</dependencies>
</project>
